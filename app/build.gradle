plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-kapt'
  id 'kotlin-parcelize'
  id 'androidx.navigation.safeargs'
  id 'com.google.dagger.hilt.android'
  id 'com.google.firebase.crashlytics'
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionIncrement = 0

android {
  compileSdk 33
  buildToolsVersion "32.0.0"

  defaultConfig {
    applicationId "com.ducpv"
    minSdk 26
    targetSdk 33

    versionCode versionMajor * 100000 + versionMinor * 1000 + versionPatch * 10 + versionIncrement
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  apply from: 'signingConfigs.gradle', to: android
  buildTypes {
    debug {
      minifyEnabled false
      signingConfig signingConfigs.debug
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

      buildConfigField "String", "API_URL", "\"https://commerce.bidu.com.vn/\""
    }
    release {
      minifyEnabled true
      signingConfig signingConfigs.release
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

      buildConfigField "String", "API_URL", "\"https://commerce.bidu.com.vn/\""
    }
  }

  buildFeatures {
    compose = true
    dataBinding = true
  }

  composeOptions {
    kotlinCompilerExtensionVersion = "1.3.2"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_11
    freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
  }

  testOptions {
    unitTests {
      returnDefaultValues = true
      includeAndroidResources = true
    }
  }
}

dependencies {
  implementation "androidx.core:core-ktx:$core_ktx"
  implementation "androidx.appcompat:appcompat:$appcompat"
  implementation "com.google.android.material:material:$material"
  implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
  implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh"

  // Jetpack
  implementation "androidx.recyclerview:recyclerview:$recyclerview"
  implementation "androidx.lifecycle:lifecycle-common:$lifecycle"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
  implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle"
  implementation "androidx.savedstate:savedstate-ktx:$savedstate_ktx"

  // Compose
  implementation "androidx.compose.material:material:$compose_material2"
  implementation "androidx.compose.ui:ui:$compose_material2"
  implementation "androidx.compose.ui:ui-tooling:$compose_material2"
  implementation "androidx.compose.ui:ui-tooling-preview:$compose_material2"
  implementation "androidx.compose.runtime:runtime:$compose_material2"
  implementation "androidx.compose.runtime:runtime-livedata:$compose_material2"

  implementation "androidx.activity:activity-compose:$activity"

  implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle"
  implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle"

  implementation "androidx.navigation:navigation-compose:$navigation"
  implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation"

  implementation "io.coil-kt:coil-compose:$compose_coil"

  implementation "com.google.accompanist:accompanist-pager:$compose_accompanist"
  implementation "com.google.accompanist:accompanist-pager-indicators:$compose_accompanist"

  // CameraX
  implementation "androidx.camera:camera-core:$camerax"
  implementation "androidx.camera:camera-camera2:$camerax"
  implementation "androidx.camera:camera-lifecycle:$camerax"
  implementation "androidx.camera:camera-video:$camerax"
  implementation "androidx.camera:camera-view:$camerax"

  // Navigation
  implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
  implementation "androidx.navigation:navigation-ui-ktx:$navigation"
  implementation "androidx.navigation:navigation-runtime-ktx:$navigation"

  // Coroutines
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines"

  // Retrofit
  implementation "com.squareup.okhttp3:okhttp:$okhttp3"
  implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3"
  implementation "com.squareup.retrofit2:retrofit:$retrofit"
  implementation "com.squareup.retrofit2:converter-scalars:$retrofit"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit"
  implementation "com.google.code.gson:gson:$gson"

  // Firebase
  implementation platform("com.google.firebase:firebase-bom:$firebase")
  implementation "com.google.firebase:firebase-crashlytics"
  implementation "com.google.firebase:firebase-analytics"

  // DataStore
  implementation "androidx.datastore:datastore-preferences:$datastore_preferences"

  // Timber
  implementation "com.jakewharton.timber:timber:$timber"

  // Glide
  implementation "com.github.bumptech.glide:glide:$glide"
  kapt "com.github.bumptech.glide:compiler:$glide"

  // Hilt
  implementation "com.google.dagger:hilt-android:$hilt_android"
  kapt "com.google.dagger:hilt-android-compiler:$hilt_android"

  // Eventbus
  implementation "org.greenrobot:eventbus:$eventbus"

  // PhotoView
  implementation "com.github.chrisbanes:PhotoView:$photo_view"

  // MLKit
  implementation "com.google.mlkit:camera:$ml_camera"
  implementation "com.google.mlkit:face-detection:$ml_face_detection"

  // Testing
  testImplementation "com.google.truth:truth:$truth"
  androidTestImplementation "androidx.test.ext:truth:$truth_ext"

  testImplementation "junit:junit:$junit"
  testImplementation "android.arch.core:core-testing:$android_core_testing"
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"

  androidTestImplementation "androidx.test:core-ktx:$androidx_test"
  androidTestImplementation "androidx.test:runner:$androidx_test"
  androidTestImplementation "androidx.test:rules:$androidx_test"
  androidTestImplementation "androidx.arch.core:core-testing:$androidx_core_testing"

  testImplementation "io.mockk:mockk:$mockk"
  androidTestImplementation "io.mockk:mockk-android:$mockk"
}

apply plugin: 'com.google.gms.google-services'

apply from: './ktlint.gradle'
